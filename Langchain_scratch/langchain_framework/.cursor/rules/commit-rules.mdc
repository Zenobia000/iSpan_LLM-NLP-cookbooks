---
description: 統一 Git Commit 格式
globs: /.git/**
---
# Commit Message 規則 

## **Description**
本規則用於統一 Git Commit Message 格式，以確保團隊協作時，提交訊息清晰易讀，便於版本控制與變更追蹤。

## **Globs**
適用於 Git 相關文件與提交規則：
```plaintext
/.git/**
```

## **Commit Message 格式**
每次提交時，應遵循以下格式：
```plaintext
[類別] 簡短描述 (#IssueNumber)
```

### **類別分類**
| 類別 | 說明 |
|------|------|
| `feat` | 新功能開發 |
| `fix` | 修復錯誤 |
| `docs` | 文檔更新 |
| `refactor` | 代碼重構（無功能變更）|
| `test` | 測試代碼新增/修改 |
| `chore` | 工具設定或非業務邏輯修改 |
| `ci` | 持續整合相關變更 |
| `style` | 代碼格式調整（無影響邏輯）|
| `perf` | 性能優化 |
| `revert` | 撤銷先前提交 |

## **Commit Message 範例**
```plaintext
feat: 新增使用者登入功能 (#123)
fix: 修正 API 回應格式錯誤 (#456)
docs: 更新 README，添加安裝步驟
refactor: 重構資料處理模組，提升效能
```

## **額外規則**
1. **避免冗長的 Commit Message**，描述應清楚扼要（50 字內）。
2. **Issue 追蹤號**：若提交變更與 Issue 相關，請在 `(#IssueNumber)` 格式中標明。
3. **禁止提交未測試代碼**：若為 `fix` 或 `feat`，應包含相應測試。
4. **避免 `WIP`（Work in Progress）提交**，應在本地分支開發完成後再提交。
5. **如需額外詳細說明**，可於第二行起新增補充內容。

## **Revert Commit 規則**
當需要還原提交時，請使用：
```plaintext
revert: 還原 [commit ID] - 原因
```
範例：
```plaintext
revert: 還原 3a5b9c8 - 修正方式有誤，需重新實作 (#789)
```

## **自動化檢查**
建議使用 `commitlint` 來強制執行本規則，設定 `.commitlintrc.js`：
```javascript
module.exports = {
  extends: ['@commitlint/config-conventional'],
  rules: {
    'type-enum': [
      2, 'always', [
        'feat', 'fix', 'docs', 'refactor', 'test', 'chore', 'ci', 'style', 'perf', 'revert'
      ]
    ],
    'subject-case': [2, 'always', 'sentence-case'],
    'header-max-length': [2, 'always', 50]
  }
};
```


